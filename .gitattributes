#
# This file controls git's handling per file type:
# - line-endings
# - diff/merge behaviour
# - LFS (Large File Storage): https://git-lfs.github.com/
#
# Documentation:
# 	https://git-scm.com/docs/gitattributes
# 	https://docs.unity3d.com/Manual/SmartMerge.html
# 	https://fileinfo.com/ is your friend
# 	https://hextantstudios.com/unity-using-git/
#	https://thoughtbot.com/blog/how-to-git-with-unity
#
# Sample .gitattribute files
# 	https://hextantstudios.com/unity-gitattributes/
# 	https://gist.github.com/nemotoo/b8a1c3a0f1225bb9231979f389fd4f3f
# 	https://github.com/timdhoffmann/unity-gitattributes-for-lfs/blob/master/.gitattributes
# 	https://thoughtbot.com/blog/how-to-git-with-unity
#
# NOTE: glob patterns are case-insensitive on case-insensitive file systems (NTFS/Windows), but case-sensitive otherwise (eg Mac).
# So "*.jpg" would match both "bla.jpg" and "bla.JPG" on Windows, but not on Mac.
# Also, git LFS might be case-sensitive always? not sure :/
# TODO: either replace everything with insane patterns like *.[jJ][pP][gG], or auto-generate it somehow.
# https://public-inbox.org/git/8df71a3a-64a6-2ec4-fd04-ae4f9bd4c2f5@web.de/t/
#
# Line endings:
# - always use CRLF (Windows) for source code
# - .sln .csproj etc should use CRLF as a .NET spec requirement
# - Unity YAML files (eg scenes, prefabs, assets) should stay LF
# - Unity asmdef files are a mixed bag, they can be autogenerated OR handwritten (JSON, not YAML)
#
# TODO: handle linguist-generated?
# 	https://docs.github.com/en/github/administering-a-repository/customizing-how-changed-files-appear-on-github
#
# TODO: what was this line for?
# 	*.* text !filter !merge !diff
#



## Macros
# Macros allow to set/unset several attributes at once.
# 	https://git-scm.com/docs/gitattributes#_defining_macro_attributes
# For example "binary" is actually a macro that could be defined like this:
#   [attr]binary -diff -merge -text
#
# Just change a macro (eg to use LFS) and all filters that use it will be updated.
# LFS example:
# 	[attr]asset_lfs filter=lfs diff=lfs merge=lfs -text
# CAUTION: LFS files would need to be forcibly re-touched / re-uploaded.
# 

# Macro - Unity YAML-based files
[attr]unity_yaml -text merge=unityyamlmerge diff eol=lf
# Macro - Unity non-YAML .asset files
[attr]unity_binary -unity_yaml binary

# Macro - asset files
# Some formats use text (eg ASCII, XML) so we use a different macro to better identify them,
# but we still don't want git to merge them (at least for now).
[attr]asset_binary binary
[attr]asset_text binary

# Macro - all other binary files
[attr]other_binary binary

# Macro - documents (only in msysgit / git for Windows, see https://stackoverflow.com/a/28148416)
[attr]document diff=astextplain

# Macro - source code
[attr]code text eol=crlf
[attr]code_cs text eol=crlf diff=csharp
[attr]code_vs text eol=crlf merge=union
[attr]code_unity text eol=lf




# Default to auto-normalized line endings.
* text=auto


# Code - Source
*.cs			code_cs
*.sln			code_vs
*.csproj		code_vs
*.targets		code_vs
*.config		code_vs
# T4 templates
*.t4			code
*.tt			code
*.ttinclude		code

## Unity - Code
*.asmdef			            code_unity
/Packages/manifest.json	        code_unity
/Packages/packages-lock.json	code_unity

## Unity - Shaders
*.shader		code
*.cginc			code
*.compute		code
# TODO: aren't shader graphs actually YAML?
*.shadergraph	code

## Code - Scripts
*.bat			code
*.cmd			code


## Code - Executables
*.exe			other_binary
*.dll			other_binary
*.so			other_binary
*.pdb			other_binary
*.mdb			other_binary
*.bundle		other_binary
*.dylib			other_binary


## Unity - YAML Assets
*.meta					unity_yaml
*.unity					unity_yaml
*.prefab				unity_yaml
*.asset					unity_yaml
*.preset				unity_yaml
*.mat					unity_yaml
*.shadervariants		unity_yaml
*.anim					unity_yaml
*.playable				unity_yaml
*.controller			unity_yaml
*.overrideController	unity_yaml
*.physicMaterial		unity_yaml
*.physicsMaterial2D		unity_yaml
*.mask					unity_yaml
*.brush					unity_yaml
*.flare					unity_yaml
*.fontsettings			unity_yaml
*.guiskin				unity_yaml
*.giparams				unity_yaml
*.renderTexture			unity_yaml
*.spriteatlas			unity_yaml
*.terrainlayer			unity_yaml
*.mixer					unity_yaml
*.colors				unity_yaml

## Unity - non-YAML .asset files
# Some Unity files use the .asset extension, but are actually binary files (ie they don't respect the Asset Serialization Mode).
# Since unfortunately they don't have custom file extensions, we need a custom naming convention and a custom pattern.
# terrain asset; must have a ".terrain" suffix, eg MyTerrain.terrain.asset
*.terrain.asset			unity_binary
# navmesh asset; must have a ".navmesh" suffix, eg MyNavmesh.navmesh.asset
*.navmesh.asset			unity_binary

## Unity - Binary Assets
*.cubemap				asset_binary
*.unitypackage			asset_binary


## Image
*.jpg			asset_binary
*.jpeg			asset_binary
*.png			asset_binary
*.apng			asset_binary
*.atsc			asset_binary
*.gif			asset_binary
*.bmp			asset_binary
*.exr			asset_binary
*.tga			asset_binary
*.tiff			asset_binary
*.tif			asset_binary
*.iff			asset_binary
*.pict			asset_binary
*.dds			asset_binary
*.xcf			asset_binary
*.leo			asset_binary
*.kra			asset_binary
*.kpp			asset_binary
*.clip			asset_binary
*.webm			asset_binary
*.webp			asset_binary
*.svg			asset_binary
*.svgz			asset_binary
*.psd			asset_binary
*.psb			asset_binary
*.afphoto		asset_binary
*.afdesign		asset_binary
*.aif			asset_binary
*.eps			asset_binary
*.hdr			asset_binary
*.raw			asset_binary

## Fonts
*.otf			asset_binary
*.ttf			asset_binary

## Audio
*.mp3			asset_binary
*.ogg			asset_binary
*.wav			asset_binary
*.aiff			asset_binary
*.aif			asset_binary
*.mod			asset_binary
*.it			asset_binary
*.s3m			asset_binary
*.xm			asset_binary
*.flac			asset_binary
*.au			asset_binary
*.wproj			asset_text
*.wwu			asset_text

## Video
*.mov			asset_binary
*.avi			asset_binary
*.asf			asset_binary
*.mpg			asset_binary
*.mpeg			asset_binary
*.mp4			asset_binary
*.flv			asset_binary
*.ogv			asset_binary
*.wmv			asset_binary

## 3D
*.fbx			asset_binary
*.obj			asset_text
*.3ds			asset_binary
*.max			asset_binary
*.uvw			asset_text
*.blend			asset_binary
*.blender		asset_binary
*.collada		asset_text
*.dae			asset_text
*.mb			asset_binary
*.ma			asset_text
*.dxf			asset_text
*.c4d			asset_binary
*.lwo			asset_binary
*.lwo2			asset_binary
*.lws			asset_binary
*.lxo			asset_binary
*.abc			asset_binary
*.3dm			asset_binary
*.gltf			asset_binary
*.glb			asset_binary
*.sbs			asset_binary
*.sbsar			asset_binary
*.skp			asset_binary
*.ztl			asset_binary
*.jas			asset_binary

## Packaging
*.zip			other_binary
*.7z			other_binary
*.gz			other_binary
*.rar			other_binary
*.tar			other_binary

## Misc
*.bin			other_binary

## Documents
*.txt			text
*.md			text
*.chm			text
*.doc			document
*.docx			document
*.dot			document
*.pdf			document
*.rtf			document


## Wwise
# line endings: Wwise files should stay untouched
# (just after running the Wwise integration, some .wwu files in the default project folder are LF, some are CRLF... sigh)
*.wwu -text
*.wproj -text
# exception: Wwise Mac plugins should stay LF
Assets/Wwise/**/*.plist eol=lf
Assets/Wwise/**/Mac/**/*.cs eol=lf
Assets/Wwise/**/Mac/**/*.txt eol=lf
